const User = require('../server/models/user');
const Catway = require('../server/models/catway');
const bcrypt = require('bcryptjs');

const initializeDB = async () => {
    try {
        console.log('üîÑ Initialisation de la base de donn√©es...');

        // Cr√©er l'admin par d√©faut
        const adminExists = await User.findOne({
            email: 'admin@portplaisance.fr'
        });
        if (!adminExists) {
            const hashedPassword = await bcrypt.hash('PortAdmin2024!', 10);
            await User.create({
                email: 'admin@portplaisance.fr',
                password: hashedPassword,
                nom: 'Admin',
                prenom: 'System',
                role: 'admin'
            });
            console.log('‚úÖ Admin cr√©√©');
        }

        // Cr√©er les catways par d√©faut
        const catwaysExist = await Catway.countDocuments();
        if (!catwaysExist) {
            const catways = [];
            // Cr√©er 10 catways courts
            for (let i = 1; i <= 10; i++) {
                catways.push({
                    catwayNumber: i,
                    catwayType: 'court',
                    catwayState: 'disponible'
                });
            }
            // Cr√©er 5 catways longs
            for (let i = 11; i <= 15; i++) {
                catways.push({
                    catwayNumber: i,
                    catwayType: 'long',
                    catwayState: 'disponible'
                });
            }
            await Catway.insertMany(catways);
            console.log('‚úÖ Catways cr√©√©s');
        }

        console.log('‚úÖ Base de donn√©es initialis√©e avec succ√®s');
    } catch (error) {
        console.error("‚ùå Erreur lors de l'initialisation:", error);
        throw error;
    }
};

module.exports = initializeDB;
